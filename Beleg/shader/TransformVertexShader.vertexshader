#version 330 core

// Input vertex data, different for all executions of this shader.
// Inputvariablen -> ändern sich bei jedem Aufruf, sind default mäßig deaktiviert
layout(location = 0) in vec3 vertexPosition_modelspace; // Vertex Position, wird in objects.cpp erzeugt. Koordinate des Dreiecks im lokalen Koord. System
layout(location = 1) in vec3 vertexColor; // Vertex Farbe, wird in objects.cpp erzeugt

// Output data ; will be interpolated for each fragment.
out vec3 fragmentColor;
// Values that stay constant for the whole mesh.
uniform mat4 MVP;

// wenn Shader aufgerufen wird, wird jedesmal MVP verwendet
// wird für ein Dreieck 3x aufgerufen (da 3 Eckpunkte)
void main(){	

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1); // Berechnung Bildschirmkoordinaten des Punktes

	// The color of each vertex will be interpolated
	// to produce the color of each fragment
	fragmentColor = vertexColor;
}

